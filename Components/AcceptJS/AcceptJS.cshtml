@inject XperienceCommunity.GenericEcommerce.AcceptJS.IAcceptJSOptions options
<div class="row">
    <div class="col-md-6 mb-3">
        <label for="cc-name">Name on card</label>
        <input type="text" class="form-control" id="cc-name" placeholder="" required="">
        <small class="text-muted">Full name as displayed on card</small>
        <div class="invalid-feedback">
            Name on card is required
        </div>
    </div>
    <div class="col-md-6 mb-3">
        <label for="cc-number">Credit card number</label>
        <input type="text" class="form-control" id="cc-number" placeholder="" required="">
        <div class="invalid-feedback">
            Credit card number is required
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-3 mb-3">
        <label for="cc-expiration">Expiration</label>
        <input type="text" class="form-control" id="cc-expiration" onkeyup="checkout.maskDate(event)" placeholder="MM/YY" required="">
        <div class="invalid-feedback">
            Expiration date required
        </div>
    </div>
    <div class="col-md-3 mb-3">
        <label for="cc-expiration">CVV</label>
        <input type="text" class="form-control" id="cc-cvv" placeholder="" required="">
        <div class="invalid-feedback">
            Security code required
        </div>
    </div>
</div>
<hr class="mb-4">
<button class="btn btn-primary btn-lg btn-block" onclick="checkout.sendCreateOrder(event)" type="submit">Submit Payment</button>
<script type="text/javascript" data-initialize>
    if (!window.acceptJSLoaded) {
        var script = document.createElement('script');
        script.type = "text/javascript";
        script.src = "https://@(options.JsDomain())/v1/Accept.js";
        document.body.appendChild(script);
        window.acceptJSLoaded = true;
    }

    checkout.paymentResult = async function (response) {
        if (response.messages.resultCode === "Error") {
            var i = 0;
            while (i < response.messages.message.length) {
                console.log(
                    response.messages.message[i].code + ": " +
                    response.messages.message[i].text
                );
                document.body.dispatchEvent(ecommerceClass.showAlertEvent(response.messages.message[i].code + ": " + response.messages.message[i].text));
                i = i + 1;
            }
        } else {
            fetch("/AcceptJS/Payment", {
                method: "POST",
                body: ecommerceClass.getJSON({
                    orderGUID: checkout.orderGUID,
                    dataDescriptor: response.opaqueData.dataDescriptor,
                    dataValue: response.opaqueData.dataValue,
                }),
                headers: ecommerceClass.getPostHeaders()
            }).then((result) => {
                return result.json();
            }).then((json) => {
                document.body.dispatchEvent(checkout.paymentResultEvent(json));
            });
        }
    }

    checkout.sendCreateOrder = function (ev) {
        document.body.dispatchEvent(checkout.createOrderEvent);
    }

    checkout.payment = async function (ev) {
        fetch("/AcceptJS/GetAuthorization").then((result) => {
            return result.json();
        }).then((authData) => {
            var dateParts = document.getElementById("cc-expiration")?.value?.match(/(\d{2})\/(\d{2})/) ?? null;
            if (dateParts) {
                var cardData = {
                    cardNumber: document.getElementById("cc-number").value,
                    fullName: document.getElementById("cc-name").value,
                    month: dateParts[1],
                    year: dateParts[2],
                    cardCode: document.getElementById("cc-cvv").value
                }

                var secureData = {
                    authData: authData,
                    cardData: cardData
                };
                Accept.dispatchData(secureData, checkout.paymentResult);
            }
        });
    };

    checkout.maskDate = function (ev) {
        var code = event.keyCode;
        var allowedKeys = [8];
        if (allowedKeys.indexOf(code) !== -1) {
            return;
        }

        event.target.value = event.target.value.replace(
            /^([1-9]\/|[2-9])$/g, '0$1/' // 3 > 03/
        ).replace(
            /^(0[1-9]|1[0-2])$/g, '$1/' // 11 > 11/
        ).replace(
            /^([0-1])([3-9])$/g, '0$1/$2' // 13 > 01/3
        ).replace(
            /^(0?[1-9]|1[0-2])([0-9]{2})$/g, '$1/$2' // 141 > 01/41
        ).replace(
            /^([0]+)\/|[0]+$/g, '0' // 0/ > 0 and 00 > 0
        ).replace(
            /[^\d\/]|^[\/]*$/g, '' // To allow only digits and `/`
        ).replace(
            /\/\//g, '/' // Prevent entering more than 1 `/`
        );
    };


</script>